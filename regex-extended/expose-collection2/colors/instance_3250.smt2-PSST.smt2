(declare-fun ExpandObjSwitcher () Real)
(declare-fun Constructed_Argument_t () String)
(declare-fun CreateAsClass () Bool)
(declare-fun |0 Fill 0| () String)
(declare-fun |0 Fill 1| () String)
(declare-fun |0 Fill 2| () String)
(declare-fun |0 Fill 3| () String)
(declare-fun |0 Fill 6| () String)
(declare-fun |0 Fill 5| () String)
(declare-fun |0 Fill 4| () String)
(declare-fun Constructed_Argument () String)
(declare-fun |IsMatch_/BSx1BBS[BSd+m/_0| () Bool)
(declare-fun |1 Fill 0| () String)
(declare-fun |1 Fill 1| () String)
(declare-fun |1 Fill 2| () String)
(declare-fun |1 Fill 3| () String)
(declare-fun |1 Fill 6| () String)
(declare-fun |1 Fill 5| () String)
(declare-fun |1 Fill 4| () String)
(declare-fun |IsMatch_/BSx1BBS[BSd+m/_1| () Bool)
(declare-fun |IsMatch_/BSx1BBS[BSd+m/_2| () Bool)
(declare-fun |IsMatch_/BSx1BBS[BSd+m/_3| () Bool)
(declare-fun |IsMatch_/BSx1BBS[BSd+m/_4| () Bool)
(assert (= ExpandObjSwitcher 3.0))
(assert (= Constructed_Argument_t "string"))
(assert (not CreateAsClass))
(assert (let ((re!1 (re.++ ((_ re.capture 1) (re.* (str.to.re "."))) (re.++ (str.to.re "\u{1b}") (re.++ (str.to.re "[") (re.++ (re.+ (re.range "0" "9")) (re.++ (str.to.re "m") ((_ re.capture 2) (re.* (str.to.re ".")))))))))) (and (= |0 Fill 4| ((_ str.extract 1) Constructed_Argument re!1)) (= |0 Fill 5| ((_ str.extract 2) Constructed_Argument re!1)))))
(assert (str.in.re Constructed_Argument (re.++ (re.* (re.range "\x00" "\xff")) (str.to.re "\x1B[") (re.range "0" "9") (re.* (re.range "0" "9")) (str.to.re "m") (re.* (re.range "\x00" "\xff")))))
(declare-const replace_0_0 String)
(assert (= replace_0_0 (str.replace_re Constructed_Argument (re.++ (str.to.re "\u{1b}") (re.++ (str.to.re "[") (re.++ (re.+ (re.range "0" "9")) (str.to.re "m")))) "")))
(assert |IsMatch_/BSx1BBS[BSd+m/_0|)
(assert (let ((re!1 (re.++ ((_ re.capture 1) (re.* (str.to.re "."))) (re.++ (str.to.re "\u{1b}") (re.++ (str.to.re "[") (re.++ (re.+ (re.range "0" "9")) (re.++ (str.to.re "m") ((_ re.capture 2) (re.* (str.to.re ".")))))))))) (and (= |1 Fill 4| ((_ str.extract 1) replace_0_0 re!1)) (= |1 Fill 5| ((_ str.extract 2) replace_0_0 re!1)))))
(assert (str.in.re replace_0_0 (re.++ (re.* (re.range "\x00" "\xff")) (str.to.re "\x1B[") (re.range "0" "9") (re.* (re.range "0" "9")) (str.to.re "m") (re.* (re.range "\x00" "\xff")))))
(assert |IsMatch_/BSx1BBS[BSd+m/_1|)
(assert |IsMatch_/BSx1BBS[BSd+m/_2|)
(assert (str.in.re (str.++ |2 Fill 4| "\x1B[" |2 Fill 2| "m" |2 Fill 5|) (re.++ (re.* (re.range "\x00" "\xff")) (str.to.re "\x1B[") (re.range "0" "9") (re.* (re.range "0" "9")) (str.to.re "m") (re.* (re.range "\x00" "\xff")))))
(assert |IsMatch_/BSx1BBS[BSd+m/_3|)
(assert (str.in.re (str.++ |3 Fill 4| "\x1B[" |3 Fill 2| "m" |3 Fill 5|) (re.++ (re.* (re.range "\x00" "\xff")) (str.to.re "\x1B[") (re.range "0" "9") (re.* (re.range "0" "9")) (str.to.re "m") (re.* (re.range "\x00" "\xff")))))
(assert (let ((a!2 |0 Fill 4|)) (let ((a!5 |0 Fill 5|)) (let ((a!8 (ite (<= (+ (str.len a!2) (str.len a!5)) 0) "" (str.substr replace_0_0 0 (ite (>= (+ (str.len |1 Fill 4|) (* (- 1) (str.len a!2)) (* (- 1) (str.len a!5))) 0) (+ (str.len a!2) (str.len a!5)) (str.len |1 Fill 4|))))) (a!11 (ite (<= (+ (str.len a!2) (str.len a!5) (* (- 1) (ite (>= (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|)) 0) (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|)) (ite (>= (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|) (str.len a!2) (str.len a!5)) 0) (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|) (str.len a!2) (str.len a!5)) 0)))) 0) "" (str.substr replace_0_0 (ite (>= (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|)) 0) (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|)) (ite (>= (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|) (str.len a!2) (str.len a!5)) 0) (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|) (str.len a!2) (str.len a!5)) 0)) (+ (str.len a!2) (str.len a!5) (* (- 1) (ite (>= (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|)) 0) (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|)) (ite (>= (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|) (str.len a!2) (str.len a!5)) 0) (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|) (str.len a!2) (str.len a!5)) 0)))))))) (let ((a!14 (ite (<= (+ (str.len a!8) (str.len a!11)) 0) 0 (ite (>= (+ (str.len |2 Fill 4|) (* (- 1) (str.len a!8)) (* (- 1) (str.len a!11))) 0) (+ (str.len a!8) (str.len a!11)) (str.len |2 Fill 4|)))) (a!17 (<= (+ (str.len a!8) (str.len a!11) (* (- 1) (ite (>= (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|)) 0) (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|)) (ite (>= (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|) (str.len a!8) (str.len a!11)) 0) (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|) (str.len a!8) (str.len a!11)) 0)))) 0)) (a!18 (str.substr (str.++ a!8 a!11) (ite (>= (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|)) 0) (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|)) (ite (>= (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|) (str.len a!8) (str.len a!11)) 0) (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|) (str.len a!8) (str.len a!11)) 0)) (+ (str.len a!8) (str.len a!11) (* (- 1) (ite (>= (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|)) 0) (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|)) (ite (>= (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|) (str.len a!8) (str.len a!11)) 0) (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|) (str.len a!8) (str.len a!11)) 0))))))) (let ((a!24 (+ (str.len |3 Fill 4|) (str.len |3 Fill 6|) a!14 (ite a!17 0 (str.len a!18))))) (= (str.in.re (str.++ (ite (<= (+ a!14 (ite a!17 0 (str.len a!18))) 0) "" (str.substr (str.++ (ite (<= (+ (str.len a!8) (str.len a!11)) 0) "" (str.substr (str.++ a!8 a!11) 0 (ite (>= (+ (str.len |2 Fill 4|) (* (- 1) (str.len a!8)) (* (- 1) (str.len a!11))) 0) (+ (str.len a!8) (str.len a!11)) (str.len |2 Fill 4|)))) (ite a!17 "" a!18)) 0 (ite (>= (+ (str.len |3 Fill 4|) (* (- 1) a!14) (* (- 1) (ite a!17 0 (str.len a!18)))) 0) (+ a!14 (ite a!17 0 (str.len a!18))) (str.len |3 Fill 4|)))) (ite (<= (+ a!14 (ite a!17 0 (str.len a!18)) (* (- 1) (ite (>= (+ (str.len |3 Fill 4|) (str.len |3 Fill 6|)) 0) (+ (str.len |3 Fill 4|) (str.len |3 Fill 6|)) (ite (>= a!24 0) a!24 0)))) 0) "" (str.substr (str.++ (ite (<= (+ (str.len a!8) (str.len a!11)) 0) "" (str.substr (str.++ a!8 a!11) 0 (ite (>= (+ (str.len |2 Fill 4|) (* (- 1) (str.len a!8)) (* (- 1) (str.len a!11))) 0) (+ (str.len a!8) (str.len a!11)) (str.len |2 Fill 4|)))) (ite a!17 "" a!18)) (ite (>= (+ (str.len |3 Fill 4|) (str.len |3 Fill 6|)) 0) (+ (str.len |3 Fill 4|) (str.len |3 Fill 6|)) (ite (>= a!24 0) a!24 0)) (+ a!14 (ite a!17 0 (str.len a!18)) (* (- 1) (ite (>= (+ (str.len |3 Fill 4|) (str.len |3 Fill 6|)) 0) (+ (str.len |3 Fill 4|) (str.len |3 Fill 6|)) (ite (>= a!24 0) a!24 0))))))) (re.++ (re.* (re.range "\x00" "\xff")) (str.to.re "\x1B[") (re.range "0" "9") (re.* (re.range "0" "9")) (str.to.re "m") (re.* (re.range "\x00" "\xff")))) |IsMatch_/BSx1BBS[BSd+m/_4|)))))))
(assert (let ((a!2 |0 Fill 4|)) (let ((a!5 |0 Fill 5|)) (let ((a!8 (ite (<= (+ (str.len a!2) (str.len a!5)) 0) "" (str.substr (str.++ a!2 a!5) 0 (ite (>= (+ (str.len |1 Fill 4|) (* (- 1) (str.len a!2)) (* (- 1) (str.len a!5))) 0) (+ (str.len a!2) (str.len a!5)) (str.len |1 Fill 4|))))) (a!11 (ite (<= (+ (str.len a!2) (str.len a!5) (* (- 1) (ite (>= (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|)) 0) (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|)) (ite (>= (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|) (str.len a!2) (str.len a!5)) 0) (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|) (str.len a!2) (str.len a!5)) 0)))) 0) "" (str.substr (str.++ a!2 a!5) (ite (>= (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|)) 0) (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|)) (ite (>= (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|) (str.len a!2) (str.len a!5)) 0) (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|) (str.len a!2) (str.len a!5)) 0)) (+ (str.len a!2) (str.len a!5) (* (- 1) (ite (>= (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|)) 0) (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|)) (ite (>= (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|) (str.len a!2) (str.len a!5)) 0) (+ (str.len |1 Fill 4|) (str.len |1 Fill 6|) (str.len a!2) (str.len a!5)) 0)))))))) (let ((a!14 (ite (<= (+ (str.len a!8) (str.len a!11)) 0) "" (str.substr (str.++ a!8 a!11) 0 (ite (>= (+ (str.len |2 Fill 4|) (* (- 1) (str.len a!8)) (* (- 1) (str.len a!11))) 0) (+ (str.len a!8) (str.len a!11)) (str.len |2 Fill 4|))))) (a!17 (ite (<= (+ (str.len a!8) (str.len a!11) (* (- 1) (ite (>= (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|)) 0) (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|)) (ite (>= (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|) (str.len a!8) (str.len a!11)) 0) (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|) (str.len a!8) (str.len a!11)) 0)))) 0) "" (str.substr (str.++ a!8 a!11) (ite (>= (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|)) 0) (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|)) (ite (>= (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|) (str.len a!8) (str.len a!11)) 0) (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|) (str.len a!8) (str.len a!11)) 0)) (+ (str.len a!8) (str.len a!11) (* (- 1) (ite (>= (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|)) 0) (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|)) (ite (>= (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|) (str.len a!8) (str.len a!11)) 0) (+ (str.len |2 Fill 4|) (str.len |2 Fill 6|) (str.len a!8) (str.len a!11)) 0)))))))) (str.in.re (str.++ (ite (<= (+ (str.len a!14) (str.len a!17)) 0) "" (str.substr (str.++ a!14 a!17) 0 (ite (>= (+ (str.len |3 Fill 4|) (* (- 1) (str.len a!14)) (* (- 1) (str.len a!17))) 0) (+ (str.len a!14) (str.len a!17)) (str.len |3 Fill 4|)))) (ite (<= (+ (str.len a!14) (str.len a!17) (* (- 1) (ite (>= (+ (str.len |3 Fill 4|) (str.len |3 Fill 6|)) 0) (+ (str.len |3 Fill 4|) (str.len |3 Fill 6|)) (ite (>= (+ (str.len |3 Fill 4|) (str.len |3 Fill 6|) (str.len a!14) (str.len a!17)) 0) (+ (str.len |3 Fill 4|) (str.len |3 Fill 6|) (str.len a!14) (str.len a!17)) 0)))) 0) "" (str.substr (str.++ a!14 a!17) (ite (>= (+ (str.len |3 Fill 4|) (str.len |3 Fill 6|)) 0) (+ (str.len |3 Fill 4|) (str.len |3 Fill 6|)) (ite (>= (+ (str.len |3 Fill 4|) (str.len |3 Fill 6|) (str.len a!14) (str.len a!17)) 0) (+ (str.len |3 Fill 4|) (str.len |3 Fill 6|) (str.len a!14) (str.len a!17)) 0)) (+ (str.len a!14) (str.len a!17) (* (- 1) (ite (>= (+ (str.len |3 Fill 4|) (str.len |3 Fill 6|)) 0) (+ (str.len |3 Fill 4|) (str.len |3 Fill 6|)) (ite (>= (+ (str.len |3 Fill 4|) (str.len |3 Fill 6|) (str.len a!14) (str.len a!17)) 0) (+ (str.len |3 Fill 4|) (str.len |3 Fill 6|) (str.len a!14) (str.len a!17)) 0))))))) (re.++ (re.* (re.range "\x00" "\xff")) (str.to.re "\x1B[") (re.range "0" "9") (re.* (re.range "0" "9")) (str.to.re "m") (re.* (re.range "\x00" "\xff")))))))))
(check-sat)
