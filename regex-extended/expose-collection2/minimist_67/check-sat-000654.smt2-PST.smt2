(declare-fun Constructed_Argument_t () String)
(declare-fun Constructed_Argument_2_t () String)
(declare-fun CreateAsClass () Bool)
(declare-fun Constructed_Argument () String)
(declare-fun IsMatch_/^--.+=/_0 () Bool)
(declare-fun IsMatch_/^--no-.+/_1 () Bool)
(declare-fun IsMatch_/^--.+/_2 () Bool)
(declare-fun |IsMatch_/^-[^-]+/_3| () Bool)
(declare-fun |IsMatch_/^0x[0-9a-f]+$/i_4| () Bool)
(declare-fun |IsMatch_/^[-+]?(?:BSd+(?:BS.BSd*)?STBS.BSd+)(e[-+]?BSd+)?$/_5| () Bool)
(declare-fun IsMatch_/^--.+=/_6 () Bool)
(declare-fun IsMatch_/^--no-.+/_7 () Bool)
(declare-fun IsMatch_/^--.+/_8 () Bool)
(declare-fun |IsMatch_/^-[^-]+/_9| () Bool)
(declare-fun |IsMatch_/^0x[0-9a-f]+$/i_10| () Bool)
(declare-fun |IsMatch_/^[-+]?(?:BSd+(?:BS.BSd*)?STBS.BSd+)(e[-+]?BSd+)?$/_11| () Bool)
(declare-fun IsMatch_/^--.+=/_12 () Bool)
(declare-fun IsMatch_/^--no-.+/_13 () Bool)
(declare-fun IsMatch_/^--.+/_14 () Bool)
(declare-fun |IsMatch_/^-[^-]+/_15| () Bool)
(declare-fun |IsMatch_/^0x[0-9a-f]+$/i_16| () Bool)
(declare-fun |IsMatch_/^[-+]?(?:BSd+(?:BS.BSd*)?STBS.BSd+)(e[-+]?BSd+)?$/_17| () Bool)
(declare-fun IsMatch_/^--.+=/_18 () Bool)
(declare-fun IsMatch_/^--no-.+/_19 () Bool)
(declare-fun IsMatch_/^--.+/_20 () Bool)
(declare-fun |IsMatch_/^-[^-]+/_21| () Bool)
(declare-fun |IsMatch_/^0x[0-9a-f]+$/i_22| () Bool)
(assert (= Constructed_Argument_t (str.++ (seq.unit #x73) (seq.unit #x74) (seq.unit #x72) (seq.unit #x69) (seq.unit #x6e) (seq.unit #x67))))
(assert (not (= Constructed_Argument_2_t (str.++ (seq.unit #x73) (seq.unit #x74) (seq.unit #x72) (seq.unit #x69) (seq.unit #x6e) (seq.unit #x67)))))
(assert (not (= Constructed_Argument_2_t (str.++ (seq.unit #x6e) (seq.unit #x75) (seq.unit #x6d) (seq.unit #x62) (seq.unit #x65) (seq.unit #x72)))))
(assert (not (= Constructed_Argument_2_t (str.++ (seq.unit #x62) (seq.unit #x6f) (seq.unit #x6f) (seq.unit #x6c) (seq.unit #x65) (seq.unit #x61) (seq.unit #x6e)))))
(assert (not (= Constructed_Argument_2_t (str.++ (seq.unit #x6f) (seq.unit #x62) (seq.unit #x6a) (seq.unit #x65) (seq.unit #x63) (seq.unit #x74)))))
(assert (not (= Constructed_Argument_2_t (str.++ (seq.unit #x61) (seq.unit #x72) (seq.unit #x72) (seq.unit #x61) (seq.unit #x79) (seq.unit #x5f) (seq.unit #x6e) (seq.unit #x75) (seq.unit #x6d) (seq.unit #x62) (seq.unit #x65) (seq.unit #x72)))))
(assert (not (= Constructed_Argument_2_t (str.++ (seq.unit #x61) (seq.unit #x72) (seq.unit #x72) (seq.unit #x61) (seq.unit #x79) (seq.unit #x5f) (seq.unit #x73) (seq.unit #x74) (seq.unit #x72) (seq.unit #x69) (seq.unit #x6e) (seq.unit #x67)))))
(assert (not (= Constructed_Argument_2_t (str.++ (seq.unit #x61) (seq.unit #x72) (seq.unit #x72) (seq.unit #x61) (seq.unit #x79) (seq.unit #x5f) (seq.unit #x62) (seq.unit #x6f) (seq.unit #x6f) (seq.unit #x6c)))))
(assert (not (= Constructed_Argument_2_t (str.++ (seq.unit #x6e) (seq.unit #x75) (seq.unit #x6c) (seq.unit #x6c)))))
(assert (not CreateAsClass))
(assert (= (to_real (str.indexof Constructed_Argument (str.++ (seq.unit #x2d) (seq.unit #x2d)) 0)) (- 1.0)))
(assert (not (<= (to_real (str.len Constructed_Argument)) 0.0)))
(assert (= (str.in.re (str.at Constructed_Argument 0) (re.++ (str.to.re (str.++ (seq.unit #x2d) (seq.unit #x2d))) (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09))) (re.* (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09)))) (str.to.re (seq.unit #x3d)) (re.* (re.range (seq.unit #x00) (seq.unit #xff))))) IsMatch_/^--.+=/_0))
(assert (not IsMatch_/^--.+=/_0))
(assert (= (str.in.re (str.at Constructed_Argument 0) (re.++ (str.to.re (str.++ (seq.unit #x2d) (seq.unit #x2d) (seq.unit #x6e) (seq.unit #x6f) (seq.unit #x2d))) (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09))) (re.* (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09)))) (re.* (re.range (seq.unit #x00) (seq.unit #xff))))) IsMatch_/^--no-.+/_1))
(assert (not IsMatch_/^--no-.+/_1))
(assert (= (str.in.re (str.at Constructed_Argument 0) (re.++ (str.to.re (str.++ (seq.unit #x2d) (seq.unit #x2d))) (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09))) (re.* (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09)))) (re.* (re.range (seq.unit #x00) (seq.unit #xff))))) IsMatch_/^--.+/_2))
(assert (not IsMatch_/^--.+/_2))
(assert (= (str.in.re (str.at Constructed_Argument 0) (re.++ (str.to.re (seq.unit #x2d)) (re.inter (re.comp (str.to.re (seq.unit #x2d))) (re.range (seq.unit #x00) (seq.unit #xff))) (re.* (re.inter (re.comp (str.to.re (seq.unit #x2d))) (re.range (seq.unit #x00) (seq.unit #xff)))) (re.* (re.range (seq.unit #x00) (seq.unit #xff))))) |IsMatch_/^-[^-]+/_3|))
(assert (not |IsMatch_/^-[^-]+/_3|))
(assert (= (str.in.re (str.at Constructed_Argument 0) (re.++ (str.to.re (str.++ (seq.unit #x30) (seq.unit #x78))) (re.union (re.range (seq.unit #x30) (seq.unit #x39)) (re.range (seq.unit #x61) (seq.unit #x66))) (re.* (re.union (re.range (seq.unit #x30) (seq.unit #x39)) (re.range (seq.unit #x61) (seq.unit #x66)))))) |IsMatch_/^0x[0-9a-f]+$/i_4|))
(assert (not |IsMatch_/^0x[0-9a-f]+$/i_4|))
(assert (= (str.in.re (str.at Constructed_Argument 0) (re.++ (re.union (str.to.re (seq.unit #x2d)) (str.to.re "") (str.to.re (seq.unit #x2b))) (re.union (re.++ (re.++ (re.range (seq.unit #x30) (seq.unit #x39)) (re.* (re.range (seq.unit #x30) (seq.unit #x39)))) (re.union (str.to.re "") (re.++ (str.to.re (seq.unit #x2e)) (re.* (re.range (seq.unit #x30) (seq.unit #x39)))))) (re.++ (str.to.re (seq.unit #x2e)) (re.++ (re.range (seq.unit #x30) (seq.unit #x39)) (re.* (re.range (seq.unit #x30) (seq.unit #x39)))))) (re.union (str.to.re "") (re.++ (str.to.re (seq.unit #x65)) (re.union (str.to.re (seq.unit #x2d)) (str.to.re "") (str.to.re (seq.unit #x2b))) (re.++ (re.range (seq.unit #x30) (seq.unit #x39)) (re.* (re.range (seq.unit #x30) (seq.unit #x39)))))))) |IsMatch_/^[-+]?(?:BSd+(?:BS.BSd*)?STBS.BSd+)(e[-+]?BSd+)?$/_5|))
(assert (not |IsMatch_/^[-+]?(?:BSd+(?:BS.BSd*)?STBS.BSd+)(e[-+]?BSd+)?$/_5|))
(assert (not (<= (to_real (str.len Constructed_Argument)) 1.0)))
(assert (= (str.in.re (str.at Constructed_Argument 1) (re.++ (str.to.re (str.++ (seq.unit #x2d) (seq.unit #x2d))) (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09))) (re.* (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09)))) (str.to.re (seq.unit #x3d)) (re.* (re.range (seq.unit #x00) (seq.unit #xff))))) IsMatch_/^--.+=/_6))
(assert (not IsMatch_/^--.+=/_6))
(assert (= (str.in.re (str.at Constructed_Argument 1) (re.++ (str.to.re (str.++ (seq.unit #x2d) (seq.unit #x2d) (seq.unit #x6e) (seq.unit #x6f) (seq.unit #x2d))) (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09))) (re.* (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09)))) (re.* (re.range (seq.unit #x00) (seq.unit #xff))))) IsMatch_/^--no-.+/_7))
(assert (not IsMatch_/^--no-.+/_7))
(assert (= (str.in.re (str.at Constructed_Argument 1) (re.++ (str.to.re (str.++ (seq.unit #x2d) (seq.unit #x2d))) (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09))) (re.* (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09)))) (re.* (re.range (seq.unit #x00) (seq.unit #xff))))) IsMatch_/^--.+/_8))
(assert (not IsMatch_/^--.+/_8))
(assert (= (str.in.re (str.at Constructed_Argument 1) (re.++ (str.to.re (seq.unit #x2d)) (re.inter (re.comp (str.to.re (seq.unit #x2d))) (re.range (seq.unit #x00) (seq.unit #xff))) (re.* (re.inter (re.comp (str.to.re (seq.unit #x2d))) (re.range (seq.unit #x00) (seq.unit #xff)))) (re.* (re.range (seq.unit #x00) (seq.unit #xff))))) |IsMatch_/^-[^-]+/_9|))
(assert (not |IsMatch_/^-[^-]+/_9|))
(assert (= (str.in.re (str.at Constructed_Argument 1) (re.++ (str.to.re (str.++ (seq.unit #x30) (seq.unit #x78))) (re.union (re.range (seq.unit #x30) (seq.unit #x39)) (re.range (seq.unit #x61) (seq.unit #x66))) (re.* (re.union (re.range (seq.unit #x30) (seq.unit #x39)) (re.range (seq.unit #x61) (seq.unit #x66)))))) |IsMatch_/^0x[0-9a-f]+$/i_10|))
(assert (not |IsMatch_/^0x[0-9a-f]+$/i_10|))
(assert (= (str.in.re (str.at Constructed_Argument 1) (re.++ (re.union (str.to.re (seq.unit #x2d)) (str.to.re "") (str.to.re (seq.unit #x2b))) (re.union (re.++ (re.++ (re.range (seq.unit #x30) (seq.unit #x39)) (re.* (re.range (seq.unit #x30) (seq.unit #x39)))) (re.union (str.to.re "") (re.++ (str.to.re (seq.unit #x2e)) (re.* (re.range (seq.unit #x30) (seq.unit #x39)))))) (re.++ (str.to.re (seq.unit #x2e)) (re.++ (re.range (seq.unit #x30) (seq.unit #x39)) (re.* (re.range (seq.unit #x30) (seq.unit #x39)))))) (re.union (str.to.re "") (re.++ (str.to.re (seq.unit #x65)) (re.union (str.to.re (seq.unit #x2d)) (str.to.re "") (str.to.re (seq.unit #x2b))) (re.++ (re.range (seq.unit #x30) (seq.unit #x39)) (re.* (re.range (seq.unit #x30) (seq.unit #x39)))))))) |IsMatch_/^[-+]?(?:BSd+(?:BS.BSd*)?STBS.BSd+)(e[-+]?BSd+)?$/_11|))
(assert (not |IsMatch_/^[-+]?(?:BSd+(?:BS.BSd*)?STBS.BSd+)(e[-+]?BSd+)?$/_11|))
(assert (not (<= (to_real (str.len Constructed_Argument)) 2.0)))
(assert (= (str.in.re (str.at Constructed_Argument 2) (re.++ (str.to.re (str.++ (seq.unit #x2d) (seq.unit #x2d))) (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09))) (re.* (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09)))) (str.to.re (seq.unit #x3d)) (re.* (re.range (seq.unit #x00) (seq.unit #xff))))) IsMatch_/^--.+=/_12))
(assert (not IsMatch_/^--.+=/_12))
(assert (= (str.in.re (str.at Constructed_Argument 2) (re.++ (str.to.re (str.++ (seq.unit #x2d) (seq.unit #x2d) (seq.unit #x6e) (seq.unit #x6f) (seq.unit #x2d))) (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09))) (re.* (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09)))) (re.* (re.range (seq.unit #x00) (seq.unit #xff))))) IsMatch_/^--no-.+/_13))
(assert (not IsMatch_/^--no-.+/_13))
(assert (= (str.in.re (str.at Constructed_Argument 2) (re.++ (str.to.re (str.++ (seq.unit #x2d) (seq.unit #x2d))) (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09))) (re.* (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09)))) (re.* (re.range (seq.unit #x00) (seq.unit #xff))))) IsMatch_/^--.+/_14))
(assert (not IsMatch_/^--.+/_14))
(assert (= (str.in.re (str.at Constructed_Argument 2) (re.++ (str.to.re (seq.unit #x2d)) (re.inter (re.comp (str.to.re (seq.unit #x2d))) (re.range (seq.unit #x00) (seq.unit #xff))) (re.* (re.inter (re.comp (str.to.re (seq.unit #x2d))) (re.range (seq.unit #x00) (seq.unit #xff)))) (re.* (re.range (seq.unit #x00) (seq.unit #xff))))) |IsMatch_/^-[^-]+/_15|))
(assert (not |IsMatch_/^-[^-]+/_15|))
(assert (= (str.in.re (str.at Constructed_Argument 2) (re.++ (str.to.re (str.++ (seq.unit #x30) (seq.unit #x78))) (re.union (re.range (seq.unit #x30) (seq.unit #x39)) (re.range (seq.unit #x61) (seq.unit #x66))) (re.* (re.union (re.range (seq.unit #x30) (seq.unit #x39)) (re.range (seq.unit #x61) (seq.unit #x66)))))) |IsMatch_/^0x[0-9a-f]+$/i_16|))
(assert (not |IsMatch_/^0x[0-9a-f]+$/i_16|))
(assert (= (str.in.re (str.at Constructed_Argument 2) (re.++ (re.union (str.to.re (seq.unit #x2d)) (str.to.re "") (str.to.re (seq.unit #x2b))) (re.union (re.++ (re.++ (re.range (seq.unit #x30) (seq.unit #x39)) (re.* (re.range (seq.unit #x30) (seq.unit #x39)))) (re.union (str.to.re "") (re.++ (str.to.re (seq.unit #x2e)) (re.* (re.range (seq.unit #x30) (seq.unit #x39)))))) (re.++ (str.to.re (seq.unit #x2e)) (re.++ (re.range (seq.unit #x30) (seq.unit #x39)) (re.* (re.range (seq.unit #x30) (seq.unit #x39)))))) (re.union (str.to.re "") (re.++ (str.to.re (seq.unit #x65)) (re.union (str.to.re (seq.unit #x2d)) (str.to.re "") (str.to.re (seq.unit #x2b))) (re.++ (re.range (seq.unit #x30) (seq.unit #x39)) (re.* (re.range (seq.unit #x30) (seq.unit #x39)))))))) |IsMatch_/^[-+]?(?:BSd+(?:BS.BSd*)?STBS.BSd+)(e[-+]?BSd+)?$/_17|))
(assert (not |IsMatch_/^[-+]?(?:BSd+(?:BS.BSd*)?STBS.BSd+)(e[-+]?BSd+)?$/_17|))
(assert (not (<= (to_real (str.len Constructed_Argument)) 3.0)))
(assert (= (str.in.re (str.at Constructed_Argument 3) (re.++ (str.to.re (str.++ (seq.unit #x2d) (seq.unit #x2d))) (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09))) (re.* (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09)))) (str.to.re (seq.unit #x3d)) (re.* (re.range (seq.unit #x00) (seq.unit #xff))))) IsMatch_/^--.+=/_18))
(assert (not IsMatch_/^--.+=/_18))
(assert (= (str.in.re (str.at Constructed_Argument 3) (re.++ (str.to.re (str.++ (seq.unit #x2d) (seq.unit #x2d) (seq.unit #x6e) (seq.unit #x6f) (seq.unit #x2d))) (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09))) (re.* (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09)))) (re.* (re.range (seq.unit #x00) (seq.unit #xff))))) IsMatch_/^--no-.+/_19))
(assert (not IsMatch_/^--no-.+/_19))
(assert (= (str.in.re (str.at Constructed_Argument 3) (re.++ (str.to.re (str.++ (seq.unit #x2d) (seq.unit #x2d))) (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09))) (re.* (re.union (re.range (seq.unit #x0b) (seq.unit #xff)) (re.range (seq.unit #x00) (seq.unit #x09)))) (re.* (re.range (seq.unit #x00) (seq.unit #xff))))) IsMatch_/^--.+/_20))
(assert (not IsMatch_/^--.+/_20))
(assert (= (str.in.re (str.at Constructed_Argument 3) (re.++ (str.to.re (seq.unit #x2d)) (re.inter (re.comp (str.to.re (seq.unit #x2d))) (re.range (seq.unit #x00) (seq.unit #xff))) (re.* (re.inter (re.comp (str.to.re (seq.unit #x2d))) (re.range (seq.unit #x00) (seq.unit #xff)))) (re.* (re.range (seq.unit #x00) (seq.unit #xff))))) |IsMatch_/^-[^-]+/_21|))
(assert (not |IsMatch_/^-[^-]+/_21|))
(assert (= (str.in.re (str.at Constructed_Argument 3) (re.++ (str.to.re (str.++ (seq.unit #x30) (seq.unit #x78))) (re.union (re.range (seq.unit #x30) (seq.unit #x39)) (re.range (seq.unit #x61) (seq.unit #x66))) (re.* (re.union (re.range (seq.unit #x30) (seq.unit #x39)) (re.range (seq.unit #x61) (seq.unit #x66)))))) |IsMatch_/^0x[0-9a-f]+$/i_22|))
(assert (str.in.re (str.at Constructed_Argument 3) (re.++ (str.to.re (str.++ (seq.unit #x30) (seq.unit #x78))) (re.union (re.range (seq.unit #x30) (seq.unit #x39)) (re.range (seq.unit #x61) (seq.unit #x66))) (re.* (re.union (re.range (seq.unit #x30) (seq.unit #x39)) (re.range (seq.unit #x61) (seq.unit #x66)))))))
(check-sat)
