(declare-fun Constructed_Argument_t () String)
(declare-fun Constructed_Argument_Array_Length () Int)
(declare-fun Constructed_Argument_2_t () String)
(declare-fun CreateAsClass () Bool)
(declare-fun |_IndexOf_0)| () Int)
(declare-fun Constructed_Argument () (Array Int String))
(assert (= Constructed_Argument_t (str.++ (seq.unit #x61) (seq.unit #x72) (seq.unit #x72) (seq.unit #x61) (seq.unit #x79) (seq.unit #x5f) (seq.unit #x73) (seq.unit #x74) (seq.unit #x72) (seq.unit #x69) (seq.unit #x6e) (seq.unit #x67))))
(assert (>= Constructed_Argument_Array_Length 0))
(assert (not (= Constructed_Argument_2_t (str.++ (seq.unit #x73) (seq.unit #x74) (seq.unit #x72) (seq.unit #x69) (seq.unit #x6e) (seq.unit #x67)))))
(assert (not (= Constructed_Argument_2_t (str.++ (seq.unit #x6e) (seq.unit #x75) (seq.unit #x6d) (seq.unit #x62) (seq.unit #x65) (seq.unit #x72)))))
(assert (not (= Constructed_Argument_2_t (str.++ (seq.unit #x62) (seq.unit #x6f) (seq.unit #x6f) (seq.unit #x6c) (seq.unit #x65) (seq.unit #x61) (seq.unit #x6e)))))
(assert (not (= Constructed_Argument_2_t (str.++ (seq.unit #x6f) (seq.unit #x62) (seq.unit #x6a) (seq.unit #x65) (seq.unit #x63) (seq.unit #x74)))))
(assert (not (= Constructed_Argument_2_t (str.++ (seq.unit #x61) (seq.unit #x72) (seq.unit #x72) (seq.unit #x61) (seq.unit #x79) (seq.unit #x5f) (seq.unit #x6e) (seq.unit #x75) (seq.unit #x6d) (seq.unit #x62) (seq.unit #x65) (seq.unit #x72)))))
(assert (not (= Constructed_Argument_2_t (str.++ (seq.unit #x61) (seq.unit #x72) (seq.unit #x72) (seq.unit #x61) (seq.unit #x79) (seq.unit #x5f) (seq.unit #x73) (seq.unit #x74) (seq.unit #x72) (seq.unit #x69) (seq.unit #x6e) (seq.unit #x67)))))
(assert (not (= Constructed_Argument_2_t (str.++ (seq.unit #x61) (seq.unit #x72) (seq.unit #x72) (seq.unit #x61) (seq.unit #x79) (seq.unit #x5f) (seq.unit #x62) (seq.unit #x6f) (seq.unit #x6f) (seq.unit #x6c)))))
(assert (not (= Constructed_Argument_2_t (str.++ (seq.unit #x6e) (seq.unit #x75) (seq.unit #x6c) (seq.unit #x6c)))))
(assert (not CreateAsClass))
(assert (>= |_IndexOf_0)| (- 1)))
(assert (not (<= (+ Constructed_Argument_Array_Length (* (- 1) |_IndexOf_0)|)) 0)))
(assert (or (= |_IndexOf_0)| (- 1)) (= (select Constructed_Argument |_IndexOf_0)|) (str.++ (seq.unit #x2d) (seq.unit #x2d)))))
(assert (or (<= |_IndexOf_0)| (- 1)) (forall ((_fn_IndexOf_0_ Int)) (! (or (>= (+ _fn_IndexOf_0_ (* (- 1) |_IndexOf_0)|)) 0) (not (>= _fn_IndexOf_0_ 0)) (not (= (select Constructed_Argument _fn_IndexOf_0_) (str.++ (seq.unit #x2d) (seq.unit #x2d))))) :pattern ((not (>= (+ _fn_IndexOf_0_ (* (- 1) |_IndexOf_0)|)) 0)) (>= _fn_IndexOf_0_ 0)) :weight 0))))
(assert (= (to_real |_IndexOf_0)|) (- 1.0)))
(assert (not (<= (to_real Constructed_Argument_Array_Length) 0.0)))
(assert false)
(check-sat)
