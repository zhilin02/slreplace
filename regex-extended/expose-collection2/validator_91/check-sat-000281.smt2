(declare-fun Constructed_Argument_t () String)
(declare-fun Constructed_Argument_2_t () String)
(declare-fun Constructed_Argument_2_Array_Length () Int)
(declare-fun CreateAsClass () Bool)
(define-funs-rec ( ( str.repeat ((x!1 String) (x!2 Int)) String)
                   ( str.whiteLeft ((x!1 String) (x!2 Int)) Int)
                   ( str.whiteRight ((x!1 String) (x!2 Int)) Int))
                 ( (ite (<= x!2 0)
                        ""
                        (str.++ x!1 ((_ str.repeat 0) x!1 (- x!2 1))))
                   (ite (= (str.at x!1 x!2) " ")
                        ((_ str.whiteLeft 0) x!1 (+ x!2 1))
                        x!2)
                   (ite (= (str.at x!1 x!2) " ")
                        ((_ str.whiteRight 0) x!1 (- x!2 1))
                        x!2)))
(assert (= Constructed_Argument_t
   (str.++ (seq.unit #x62)
           (seq.unit #x6f)
           (seq.unit #x6f)
           (seq.unit #x6c)
           (seq.unit #x65)
           (seq.unit #x61)
           (seq.unit #x6e))))
(assert (= Constructed_Argument_2_t
   (str.++ (seq.unit #x61)
           (seq.unit #x72)
           (seq.unit #x72)
           (seq.unit #x61)
           (seq.unit #x79)
           (seq.unit #x5f)
           (seq.unit #x62)
           (seq.unit #x6f)
           (seq.unit #x6f)
           (seq.unit #x6c))))
(assert (>= Constructed_Argument_2_Array_Length 0))
(assert CreateAsClass)

(check-sat)